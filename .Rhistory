installed.packages("tufte")
installed.packages("tufte")
base_url1 <- "https://api.dataforsyningen.dk/"
base_url2 <- "?format=geojson"
base::paste0(base_url1,
"kommuner",
base_url2)
rm(base_url1, base_url2)
docu
library(devtools)
library(roxygen2)
document()
document()
document()
document()
document()
document()
library(devtools)
library(roxygen2)
use_github_action_check_standard(
save_as = "R-CMD-check.yaml",
ignore = TRUE,
open = FALSE
)
document()
check()
library(sf)
sessionInfo()
library(dplyr)
sessionInfo()
check()
check()
document()
library(devt)
library(devtools)
install_github("jvieroe/cclavus")
library(roxygen2)
check()
check()
document()
library(devtools)
install_github("jvieroe/dyadicdist")
## code to prepare `DATASET` dataset goes here
library(magrittr)
library(sf)
## code to prepare `DATASET` dataset goes here
library(magrittr)
library(sf)
url_baselayer <- "https://api.dataforsyningen.dk/regioner?format=geojson"
tic()
baselayer <- sf::read_sf(url_baselayer) ; rm(url_baselayer)
toc()
library(tictoc)
library(magrittr)
library(sf)
library(tictoc)
url_baselayer <- "https://api.dataforsyningen.dk/regioner?format=geojson"
tic()
baselayer <- sf::read_sf(url_baselayer) ; rm(url_baselayer)
toc()
url_baselayer <- "https://api.dataforsyningen.dk/regioner?format=geojson"
tic()
baselayer <- sf::read_sf(url_baselayer) ; rm(url_baselayer)
baselayer <- baselayer %>%
sf::st_transform(crs = 4326) %>%
sf::st_union()
toc()
## code to prepare `DATASET` dataset goes here
library(magrittr)
url_baselayer <- "https://api.dataforsyningen.dk/regioner?format=geojson"
baselayer <- sf::read_sf(url_baselayer) ; rm(url_baselayer)
baselayer <- baselayer %>%
sf::st_transform(crs = 4326) %>%
sf::st_union()
library(devtools)
library(roxygen2)
usethis::use_data(baselayer, overwrite = TRUE, compress = "bzip2")
document()
library(devtools)
library(roxygen2)
install_github("jvieroe/cclavus")
library(cclavus)
library(devtools)
check()
## code to prepare `DATASET` dataset goes here
library(magrittr)
url_baselayer <- "https://api.dataforsyningen.dk/regioner?format=geojson"
baselayer <- sf::read_sf(url_baselayer) ; rm(url_baselayer)
baselayer <- baselayer %>%
sf::st_transform(crs = 4326) %>%
sf::st_union()
usethis::use_data(baselayer, overwrite = TRUE, compress = "gzip")
usethis::use_data(baselayer, overwrite = TRUE, compress = "xz")
library(roxygen2)
document()
library(devtools)
install_github("jvieroe/cclavus")
library(cclavus)
check()
library(devtools)
library(roxygen2)
install_github("jvieroe/cclavus")
check()
## code to prepare `DATASET` dataset goes here
library(magrittr)
library(sf)
library(magrittr)
library(sf)
baselayer <- sf::read_sf("https://api.dataforsyningen.dk/regioner?format=geojson")
baselayer <- sf::read_sf("https://api.dataforsyningen.dk/regioner?format=geojson")
st_crs(baselayer)
baselayer <- sf::st_union(baselayer)
usethis::use_data(baselayer, overwrite = TRUE, compress = "xz")
document()
document()
rm(baselayer)
check()
document()
check()
document()
check()
library(devtools)
library(roxygen2)
install_github("jvieroe/cclavus")
check()
tools::add_datalist
tools::add_datalist()
getwd()
tools::add_datalist(~)
tools::add_datalist(getwd())
document()
?CheckLazyDataCompression
??CheckLazyDataCompression
CheckLazyDataCompression()
?use_data
## code to prepare `DATASET` dataset goes here
library(magrittr)
library(sf)
baselayer <- sf::read_sf("https://api.dataforsyningen.dk/regioner?format=geojson")
baselayer <- sf::st_union(baselayer)
usethis::use_data(baselayer, overwrite = TRUE, compress = "gzip")
object.size(baselayer)
object.size(baselayer)/1000000
temp <- baselayer %>%
st_cast("MULTIPOLYGON")
object.size(temp)/1000000
temp <- baselayer %>%
st_cast("MULTIPOLYGON") %>%
st_as_sf()
object.size(temp)/1000000
temp <- baselayer %>%
st_cast("MULTIPOLYGON") %>%
st_as_sf()
object.size(temp)/1000000
baselayer <- sf::read_sf("https://api.dataforsyningen.dk/regioner?format=geojson")
object.size(baselayer)/1000000
temp <- baselayer %>%
st_cast("MULTIPOLYGON") %>%
st_as_sf()
object.size(temp)/1000000
baselayer <- sf::read_sf("https://api.dataforsyningen.dk/regioner?format=geojson")
baselayer <- sf::st_union(baselayer)
object.size(baselayer)/1000000
usethis::use_data(baselayer, overwrite = TRUE, compress = "xz")
document()
